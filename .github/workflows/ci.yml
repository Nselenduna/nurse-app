name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        
      - name: Archive lint results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-results
          path: |
            .eslintcache
            lint-results.json
          retention-days: 7

  test:
    name: Unit and Integration Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test -- --coverage
        
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage
          retention-days: 7
          
      - name: Report test coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
        
      - name: Build development client
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
        run: npx eas build --platform all --profile development --non-interactive
        
      - name: Build preview
        if: github.ref == 'refs/heads/develop'
        run: npx eas build --platform all --profile preview --non-interactive
        
      - name: Build production
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: npx eas build --platform all --profile production --non-interactive

  e2e:
    name: End-to-End Tests
    needs: build
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Detox CLI
        run: npm install -g detox-cli
        
      - name: Install Detox dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
          
      - name: Build for Detox
        run: |
          npx expo prebuild
          cd ios && pod install && cd ..
          detox build --configuration ios.sim.debug
          
      - name: Run Detox tests
        run: detox test --configuration ios.sim.debug
        
      - name: Archive E2E test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-results
          path: e2e/artifacts
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true
        
      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'nurse-app'
          path: '.'
          format: 'HTML'
          out: 'dependency-check-reports'
          
      - name: Archive security scan results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: dependency-check-reports
          retention-days: 7

  deploy:
    name: Deploy
    needs: [test, build, e2e, security-scan]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy to Expo
        run: npx eas update --auto
        
      - name: Submit to stores
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        run: npx eas submit --platform all --profile production --non-interactive
        
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Notify team of deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  rollback:
    name: Rollback on Failure
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Rollback to previous version
        run: |
          # Get previous successful update
          PREVIOUS_UPDATE=$(npx eas update:list --json --limit 2 --status=completed | jq -r '.[1].id')
          
          # Rollback to previous update
          npx eas update:republish --id $PREVIOUS_UPDATE
          
      - name: Notify team of rollback
        uses: 8398a7/action-slack@v3
        with:
          status: 'failure'
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Deployment failed! Rollback initiated.'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
